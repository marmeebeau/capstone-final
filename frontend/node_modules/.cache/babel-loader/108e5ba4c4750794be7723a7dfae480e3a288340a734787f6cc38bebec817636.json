{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:1337/api'; // Adjust if Strapi is hosted elsewhere\n\n// Set authorization token in axios headers\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Register a new coordinator\nexport const signup = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/coordinators/register`, {\n      data: formData\n    });\n    if (response.data.jwt) {\n      localStorage.setItem('user', JSON.stringify(response.data)); // Store user data with JWT\n      setAuthToken(response.data.jwt); // Set token for future requests\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response$data$;\n    console.error('Signup error:', error);\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Signup failed. Please try again.';\n    throw new Error(errorMessage);\n  }\n};\n\n// Login a user (coordinator or admin)\nexport const login = async (identifier, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/coordinators/login`, {\n      identifier,\n      password\n    });\n    const {\n      coordinator,\n      token\n    } = response.data; // Ensure response contains 'coordinator' and 'token'\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify({\n      coordinator\n    })); // Store 'coordinator' in user\n\n    setAuthToken(token); // Set token for future requests\n    return {\n      coordinator,\n      token\n    }; // Return structured data\n  } catch (error) {\n    console.error('Login failed:', error);\n    throw new Error('Login failed. Please check your credentials.');\n  }\n};\n\n// Logout a user\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  setAuthToken(null); // Clear token from headers\n};\n\n// Get current authenticated user from localStorage\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// Check if a user is authenticated by checking the presence of a token\nexport const isAuthenticated = () => {\n  const user = getCurrentUser();\n  return user && user.jwt ? true : false;\n};\n\n// Get the user profile by ID\nexport const getProfile = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/coordinators/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching profile:', error);\n    throw new Error('Failed to fetch profile data');\n  }\n};\n\n// Update the user profile\nexport const updateProfile = async (userId, profileData) => {\n  try {\n    setAuthToken(getCurrentUser().jwt);\n    const response = await axios.put(`${API_URL}/coordinators/${userId}`, {\n      data: profileData\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error updating profile:');\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'An error occurred. Please try again.');\n  }\n};\n\n// Fetch all coordinators\nexport const getCoordinators = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/coordinators`, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n    return response.data; // Return the list of coordinators\n  } catch (error) {\n    console.error('Error fetching coordinators:', error);\n    throw new Error('Failed to fetch coordinators.');\n  }\n};\n\n// Create a new coordinator\nexport const createCoordinator = async coordinatorData => {\n  try {\n    const response = await axios.post(`${API_URL}/coordinators`, {\n      data: coordinatorData\n    }, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n    return response.data; // Return created coordinator data\n  } catch (error) {\n    console.error('Error creating coordinator:', error);\n    throw new Error('Failed to create coordinator.');\n  }\n};\n\n// Update an existing coordinator\nexport const updateCoordinator = async (id, coordinatorData) => {\n  try {\n    const response = await axios.put(`${API_URL}/coordinators/${id}`, {\n      data: coordinatorData\n    }, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n    return response.data; // Return updated coordinator data\n  } catch (error) {\n    console.error('Error updating coordinator:', error);\n    throw new Error('Failed to update coordinator.');\n  }\n};\n\n// Delete a coordinator\nexport const deleteCoordinator = async id => {\n  try {\n    await axios.delete(`${API_URL}/coordinators/${id}`, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n  } catch (error) {\n    console.error('Error deleting coordinator:', error);\n    throw new Error('Failed to delete coordinator.');\n  }\n};\n\n// Export all services\nconst authServices = {\n  signup,\n  login,\n  logout,\n  getCurrentUser,\n  isAuthenticated,\n  getProfile,\n  updateProfile,\n  getCoordinators,\n  // Include this method in the export\n  createCoordinator,\n  // Include this method in the export\n  updateCoordinator,\n  // Include this method in the export\n  deleteCoordinator,\n  // Include this method in the export\n  setAuthToken\n};\nexport default authServices;","map":{"version":3,"names":["axios","API_URL","setAuthToken","token","defaults","headers","common","signup","formData","response","post","data","jwt","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","_error$response$data$","console","errorMessage","message","Error","login","identifier","password","coordinator","logout","removeItem","getCurrentUser","user","getItem","parse","isAuthenticated","getProfile","userId","get","Authorization","updateProfile","profileData","put","_error$response2","_error$response2$data","getCoordinators","createCoordinator","coordinatorData","updateCoordinator","id","deleteCoordinator","delete","authServices"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/authServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:1337/api'; // Adjust if Strapi is hosted elsewhere\r\n\r\n// Set authorization token in axios headers\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// Register a new coordinator\r\nexport const signup = async (formData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/coordinators/register`, { data: formData });\r\n    if (response.data.jwt) {\r\n      localStorage.setItem('user', JSON.stringify(response.data)); // Store user data with JWT\r\n      setAuthToken(response.data.jwt); // Set token for future requests\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    const errorMessage = error.response?.data?.error?.message || 'Signup failed. Please try again.';\r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// Login a user (coordinator or admin)\r\nexport const login = async (identifier, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/coordinators/login`, { identifier, password });\r\n    const { coordinator, token } = response.data; // Ensure response contains 'coordinator' and 'token'\r\n\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify({ coordinator })); // Store 'coordinator' in user\r\n\r\n    setAuthToken(token); // Set token for future requests\r\n    return { coordinator, token }; // Return structured data\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n    throw new Error('Login failed. Please check your credentials.');\r\n  }\r\n};\r\n\r\n// Logout a user\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  setAuthToken(null); // Clear token from headers\r\n};\r\n\r\n// Get current authenticated user from localStorage\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// Check if a user is authenticated by checking the presence of a token\r\nexport const isAuthenticated = () => {\r\n  const user = getCurrentUser();\r\n  return user && user.jwt ? true : false;\r\n};\r\n\r\n// Get the user profile by ID\r\nexport const getProfile = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/coordinators/${userId}`, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching profile:', error);\r\n    throw new Error('Failed to fetch profile data');\r\n  }\r\n};\r\n\r\n// Update the user profile\r\nexport const updateProfile = async (userId, profileData) => {\r\n  try {\r\n    setAuthToken(getCurrentUser().jwt);\r\n    const response = await axios.put(`${API_URL}/coordinators/${userId}`, { data: profileData });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating profile:');\r\n    throw new Error(error.response?.data?.message || error.message || 'An error occurred. Please try again.');\r\n  }\r\n};\r\n\r\n// Fetch all coordinators\r\nexport const getCoordinators = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/coordinators`, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n    return response.data; // Return the list of coordinators\r\n  } catch (error) {\r\n    console.error('Error fetching coordinators:', error);\r\n    throw new Error('Failed to fetch coordinators.');\r\n  }\r\n};\r\n\r\n// Create a new coordinator\r\nexport const createCoordinator = async (coordinatorData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/coordinators`, { data: coordinatorData }, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n    return response.data; // Return created coordinator data\r\n  } catch (error) {\r\n    console.error('Error creating coordinator:', error);\r\n    throw new Error('Failed to create coordinator.');\r\n  }\r\n};\r\n\r\n// Update an existing coordinator\r\nexport const updateCoordinator = async (id, coordinatorData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/coordinators/${id}`, { data: coordinatorData }, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n    return response.data; // Return updated coordinator data\r\n  } catch (error) {\r\n    console.error('Error updating coordinator:', error);\r\n    throw new Error('Failed to update coordinator.');\r\n  }\r\n};\r\n\r\n// Delete a coordinator\r\nexport const deleteCoordinator = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/coordinators/${id}`, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting coordinator:', error);\r\n    throw new Error('Failed to delete coordinator.');\r\n  }\r\n};\r\n\r\n// Export all services\r\nconst authServices = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  isAuthenticated,\r\n  getProfile,\r\n  updateProfile,\r\n  getCoordinators, // Include this method in the export\r\n  createCoordinator, // Include this method in the export\r\n  updateCoordinator, // Include this method in the export\r\n  deleteCoordinator, // Include this method in the export\r\n  setAuthToken,\r\n};\r\n\r\nexport default authServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}