{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext'; // Updated path\nimport Login from './components/Login'; // Updated path\nimport Dashboard from './components/Dashboard'; // Updated path\n\n// Protected Route Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 64\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(ProtectedRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/dashboard\",\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"/\",\n          to: \"/login\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Redirect","Switch","AuthProvider","useAuth","Login","Dashboard","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","rest","_s","isAuthenticated","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","App","children","path","from","exact","_c2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext'; // Updated path\r\nimport Login from './components/Login'; // Updated path\r\nimport Dashboard from './components/Dashboard'; // Updated path\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { isAuthenticated } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => \r\n                isAuthenticated() ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\r\n                    <Redirect from=\"/\" to=\"/login\" exact />\r\n                    {/* Add more routes here */}\r\n                </Switch>\r\n            </Router>\r\n        </AuthProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnF,SAASC,YAAY,EAAEC,OAAO,QAAQ,uBAAuB,CAAC,CAAC;AAC/D,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AACxC,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EAErC,oBACII,OAAA,CAACR,KAAK;IAAA,GACEY,IAAI;IACRG,MAAM,EAAGC,KAAK,IACVF,eAAe,CAAC,CAAC,gBAAGN,OAAA,CAACG,SAAS;MAAA,GAAKK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGZ,OAAA,CAACP,QAAQ;MAACoB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACzE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACP,EAAA,CAXIJ,cAAc;EAAA,QACYL,OAAO;AAAA;AAAAkB,EAAA,GADjCb,cAAc;AAapB,MAAMc,GAAG,GAAGA,CAAA,KAAM;EACd,oBACIf,OAAA,CAACL,YAAY;IAAAqB,QAAA,eACThB,OAAA,CAACT,MAAM;MAAAyB,QAAA,eACHhB,OAAA,CAACN,MAAM;QAAAsB,QAAA,gBACHhB,OAAA,CAACR,KAAK;UAACyB,IAAI,EAAC,QAAQ;UAACf,SAAS,EAAEL;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCZ,OAAA,CAACC,cAAc;UAACgB,IAAI,EAAC,YAAY;UAACf,SAAS,EAAEJ;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DZ,OAAA,CAACP,QAAQ;UAACyB,IAAI,EAAC,GAAG;UAACL,EAAE,EAAC,QAAQ;UAACM,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB,CAAC;AAACQ,GAAA,GAbIL,GAAG;AAeT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}