{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// src/components/Profile.js\nimport React, { useEffect, useState } from 'react';\nimport { getCurrentUser, updateProfile } from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [isAdmin, setIsAdmin] = useState(false); // To track if the user is an admin\n\n  useEffect(() => {\n    const user = getCurrentUser();\n    if (user) {\n      setUserData(user);\n      setIsAdmin(user.role === 'Admin'); // Check if the user role is Admin\n      setFormData({\n        username: user.username,\n        email: user.email,\n        role: user.role // Add role to form data\n      });\n    }\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateProfile(userData.id, formData);\n      alert('Profile updated successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to update profile');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), userData ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: formData.role,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Coordinator\",\n            children: \"Coordinator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"grw7KLYmoWUoXr+ZEO9Tt2ibFrM=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","getCurrentUser","updateProfile","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","formData","setFormData","isAdmin","setIsAdmin","user","role","username","email","handleChange","e","name","value","target","handleSubmit","preventDefault","id","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/components/Profile.jsx"],"sourcesContent":["// src/components/Profile.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getCurrentUser, updateProfile } from '../services/authServices';\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [formData, setFormData] = useState({});\r\n  const [isAdmin, setIsAdmin] = useState(false); // To track if the user is an admin\r\n\r\n  useEffect(() => {\r\n    const user = getCurrentUser();\r\n    if (user) {\r\n      setUserData(user);\r\n      setIsAdmin(user.role === 'Admin'); // Check if the user role is Admin\r\n      setFormData({\r\n        username: user.username,\r\n        email: user.email,\r\n        role: user.role, // Add role to form data\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateProfile(userData.id, formData);\r\n      alert('Profile updated successfully!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to update profile');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Profile</h1>\r\n      {userData ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          {/* Only show the role field if the user is an Admin */}\r\n          {isAdmin && (\r\n            <div>\r\n              <label>Role:</label>\r\n              <select\r\n                name=\"role\"\r\n                value={formData.role}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"Admin\">Admin</option>\r\n                <option value=\"Coordinator\">Coordinator</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          <button type=\"submit\">Update Profile</button>\r\n        </form>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}