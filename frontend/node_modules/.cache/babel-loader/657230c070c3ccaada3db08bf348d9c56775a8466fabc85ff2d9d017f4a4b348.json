{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { login as loginService } from '../services/authServices'; // Import the login function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n\n  // Login function that calls the login service and updates the context\n  const login = async (identifier, password) => {\n    try {\n      const {\n        coordinator,\n        token\n      } = await loginService(identifier, password);\n      setUser(coordinator);\n      setToken(token);\n    } catch (error) {\n      console.error('Login failed:', error.message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"9ia165YykLvAyjBatCEsMGT9iWo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","login","loginService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","token","setToken","identifier","password","coordinator","error","console","message","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { login as loginService } from '../services/authServices'; // Import the login function\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    });\r\n\r\n    const [token, setToken] = useState(() => localStorage.getItem('token'));\r\n\r\n    // Login function that calls the login service and updates the context\r\n    const login = async (identifier, password) => {\r\n        try {\r\n            const { coordinator, token } = await loginService(identifier, password);\r\n            setUser(coordinator);\r\n            setToken(token);\r\n        } catch (error) {\r\n            console.error('Login failed:', error.message);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        setToken(null);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,KAAK,IAAIC,YAAY,QAAQ,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACnC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACrD,CAAC,CAAC;EAEF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,MAAMY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEvE;EACA,MAAMZ,KAAK,GAAG,MAAAA,CAAOiB,UAAU,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACA,MAAM;QAAEC,WAAW;QAAEJ;MAAM,CAAC,GAAG,MAAMd,YAAY,CAACgB,UAAU,EAAEC,QAAQ,CAAC;MACvET,OAAO,CAACU,WAAW,CAAC;MACpBH,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC7C,MAAMF,KAAK;IACf;EACJ,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBd,OAAO,CAAC,IAAI,CAAC;IACbO,QAAQ,CAAC,IAAI,CAAC;IACdL,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAC/Bb,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEO,KAAK;MAAEf,KAAK;MAAEuB;IAAO,CAAE;IAAAjB,QAAA,EACvDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAhCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkCzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC6B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}