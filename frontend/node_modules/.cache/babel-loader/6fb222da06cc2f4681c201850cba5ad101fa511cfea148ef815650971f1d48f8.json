{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\n\n// Function to check if the user is authenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Check if the token exists in local storage\n  const token = localStorage.getItem('token');\n  return token !== null; // Return true if token exists, else false\n};\n\n// Protected Route Component: Renders the component if authenticated, otherwise redirects to login\nconst ProtectedRoute = ({\n  element\n}) => {\n  return isAuthenticated() ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 40\n  }, this);\n};\n_c = ProtectedRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","SignUp","Login","Dashboard","Home","jsxDEV","_jsxDEV","isAuthenticated","token","localStorage","getItem","ProtectedRoute","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","path","_c2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport SignUp from './components/SignUp';\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\nimport Home from './components/Home';\r\n\r\n// Function to check if the user is authenticated\r\nconst isAuthenticated = () => {\r\n  // Check if the token exists in local storage\r\n  const token = localStorage.getItem('token');\r\n  return token !== null; // Return true if token exists, else false\r\n};\r\n\r\n// Protected Route Component: Renders the component if authenticated, otherwise redirects to login\r\nconst ProtectedRoute = ({ element }) => {\r\n  return isAuthenticated() ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Public Routes */}\r\n        <Route path=\"/\" element={<Home />} /> {/* Home Page */}\r\n        <Route path=\"/login\" \r\n        element={isAuthenticated() ? <Navigate to=\"/dashboard\" /> : <Login />} \r\n        />\r\n        <Route path=\"/signup\" \r\n        element={isAuthenticated() ? <Navigate to=\"/dashboard\" /> : <SignUp />} \r\n        />\r\n        \r\n        {/* Protected Route: Only accessible if logged in */}\r\n        <Route path=\"/dashboard\" element={<ProtectedRoute element={<Dashboard />} />} /> {/* Dashboard Page */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}