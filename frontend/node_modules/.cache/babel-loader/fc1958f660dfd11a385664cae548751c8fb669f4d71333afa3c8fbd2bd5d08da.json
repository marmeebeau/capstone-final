{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUserData = localStorage.getItem('user');\n      return storedUserData ? JSON.parse(storedUserData) : null;\n    } catch (error) {\n      console.error('Failed to parse user data from local storage:', error);\n      return null;\n    }\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      authServices.setAuthToken(token); // Set the token for all future requests\n    }\n  }, []);\n\n  // Handle user login\n  const login = async (identifier, password) => {\n    try {\n      const {\n        user,\n        token\n      } = await authServices.login(identifier, password);\n      if (!user || !token) {\n        throw new Error('Login failed. Missing user or token.');\n      }\n      setUser(user); // Set user in state\n      localStorage.setItem('token', token); // Store token\n      localStorage.setItem('user', JSON.stringify(user)); // Store user in local storage\n\n      authServices.setAuthToken(token); // Set the token in axios headers\n      navigate('/dashboard'); // Navigate to dashboard after successful login\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error; // Propagate the error to the caller (e.g., the login component)\n    }\n  };\n\n  // Handle user logout\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    authServices.setAuthToken(null); // Remove the token from axios headers\n    navigate('/login'); // Navigate to login page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"hgmq0a4abkZMptxZl/44dM6TWfs=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","authServices","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUserData","localStorage","getItem","JSON","parse","error","console","navigate","token","setAuthToken","login","identifier","password","Error","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authServices from '../services/authServices';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      const storedUserData = localStorage.getItem('user');\r\n      return storedUserData ? JSON.parse(storedUserData) : null;\r\n    } catch (error) {\r\n      console.error('Failed to parse user data from local storage:', error);\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      authServices.setAuthToken(token); // Set the token for all future requests\r\n    }\r\n  }, []);\r\n\r\n  // Handle user login\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      const { user, token } = await authServices.login(identifier, password);\r\n\r\n      if (!user || !token) {\r\n        throw new Error('Login failed. Missing user or token.');\r\n      }\r\n\r\n      setUser(user); // Set user in state\r\n      localStorage.setItem('token', token); // Store token\r\n      localStorage.setItem('user', JSON.stringify(user)); // Store user in local storage\r\n\r\n      authServices.setAuthToken(token); // Set the token in axios headers\r\n      navigate('/dashboard'); // Navigate to dashboard after successful login\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error; // Propagate the error to the caller (e.g., the login component)\r\n    }\r\n  };\r\n\r\n  // Handle user logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    authServices.setAuthToken(null); // Remove the token from axios headers\r\n    navigate('/login'); // Navigate to login page after logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}