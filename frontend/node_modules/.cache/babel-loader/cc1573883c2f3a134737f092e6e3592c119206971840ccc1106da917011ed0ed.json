{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Ensure you're importing useNavigate correctly\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error('Failed to parse user data from localStorage:', error);\n      return null;\n    }\n  });\n  const navigate = useNavigate(); // Ensure you're using useNavigate inside a Router\n\n  // Login function\n  const login = async (identifier, password) => {\n    try {\n      const {\n        user: loggedInUser,\n        token\n      } = await authServices.login(identifier, password);\n      setUser(loggedInUser); // Set the user in the state\n      localStorage.setItem('token', token); // Store the token in localStorage\n      authServices.setAuthToken(token); // Set the token for future requests\n      navigate('/dashboard'); // Navigate to dashboard after login\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    authServices.logout();\n    navigate('/login'); // Navigate to login after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use the Auth context\n_s(AuthProvider, \"GVdwFdVE+e+hApyK1LY4EbJ6wCM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","authServices","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","error","console","navigate","login","identifier","password","loggedInUser","token","setItem","setAuthToken","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Ensure you're importing useNavigate correctly\r\nimport authServices from '../services/authServices';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      const storedUser = localStorage.getItem('user');\r\n      return storedUser ? JSON.parse(storedUser) : null;\r\n    } catch (error) {\r\n      console.error('Failed to parse user data from localStorage:', error);\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const navigate = useNavigate();  // Ensure you're using useNavigate inside a Router\r\n\r\n  // Login function\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      const { user: loggedInUser, token } = await authServices.login(identifier, password);\r\n      setUser(loggedInUser);  // Set the user in the state\r\n      localStorage.setItem('token', token);  // Store the token in localStorage\r\n      authServices.setAuthToken(token);  // Set the token for future requests\r\n      navigate('/dashboard');  // Navigate to dashboard after login\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    authServices.logout();\r\n    navigate('/login');  // Navigate to login after logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the Auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,IAAI;MACF,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;IACnD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAME,QAAQ,GAAGjB,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC;EACA,MAAMkB,KAAK,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC5C,IAAI;MACF,MAAM;QAAEZ,IAAI,EAAEa,YAAY;QAAEC;MAAM,CAAC,GAAG,MAAMrB,YAAY,CAACiB,KAAK,CAACC,UAAU,EAAEC,QAAQ,CAAC;MACpFX,OAAO,CAACY,YAAY,CAAC,CAAC,CAAE;MACxBV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC,CAAC,CAAE;MACvCrB,YAAY,CAACuB,YAAY,CAACF,KAAK,CAAC,CAAC,CAAE;MACnCL,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbR,YAAY,CAACwB,MAAM,CAAC,CAAC;IACrBR,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEU,KAAK;MAAEO;IAAO,CAAE;IAAAnB,QAAA,EAClDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAxB,EAAA,CAzCaF,YAAY;EAAA,QAWNL,WAAW;AAAA;AAAAgC,EAAA,GAXjB3B,YAAY;AA0CzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC8B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}