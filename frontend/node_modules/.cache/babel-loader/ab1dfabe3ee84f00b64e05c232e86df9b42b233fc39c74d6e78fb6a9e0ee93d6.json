{"ast":null,"code":"import axios from 'axios';\n\n// Set the base URL for the API\nconst API_URL = 'http://localhost:1337/api'; // Replace with your actual API URL\n\nconst getAllUsers = async token => {\n  if (!token) {\n    throw new Error('User not authenticated');\n  }\n  const response = await axios.get(`${API_URL}/coordinators`, {\n    headers: {\n      Authorization: `Bearer ${token}` // Use the token here\n    }\n  });\n  return response.data; // Return the user data\n};\nconst updateUser = async (userId, userData, token) => {\n  if (!token) {\n    throw new Error('User not authenticated');\n  }\n  const response = await axios.put(`${API_URL}/users/${userId}`, userData, {\n    headers: {\n      Authorization: `Bearer ${token}` // Include token in the headers\n    }\n  });\n  return response.data; // This should return the updated user object\n};\nconst deleteUser = async (userId, token) => {\n  if (!token) {\n    throw new Error('User not authenticated');\n  }\n  await axios.delete(`${API_URL}/users/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}` // Include token in the headers\n    }\n  });\n\n  // No return value for delete, just need to ensure it's successful\n};\nexport default {\n  getAllUsers,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"names":["axios","API_URL","getAllUsers","token","Error","response","get","headers","Authorization","data","updateUser","userId","userData","put","deleteUser","delete"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/userServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set the base URL for the API\r\nconst API_URL = 'http://localhost:1337/api'; // Replace with your actual API URL\r\n\r\nconst getAllUsers = async (token) => {\r\n    if (!token) {\r\n        throw new Error('User not authenticated');\r\n    }\r\n\r\n    const response = await axios.get(`${API_URL}/coordinators`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Use the token here\r\n        }\r\n    });\r\n\r\n    return response.data; // Return the user data\r\n};\r\n\r\nconst updateUser = async (userId, userData, token) => {\r\n    if (!token) {\r\n        throw new Error('User not authenticated');\r\n    }\r\n\r\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Include token in the headers\r\n        }\r\n    });\r\n\r\n    return response.data; // This should return the updated user object\r\n};\r\n\r\nconst deleteUser = async (userId, token) => {\r\n    if (!token) {\r\n        throw new Error('User not authenticated');\r\n    }\r\n\r\n    await axios.delete(`${API_URL}/users/${userId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Include token in the headers\r\n        }\r\n    });\r\n    \r\n    // No return value for delete, just need to ensure it's successful\r\n};\r\n\r\nexport default {\r\n    getAllUsers,\r\n    updateUser,\r\n    deleteUser\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACjC,IAAI,CAACA,KAAK,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,eAAe,EAAE;IACxDM,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;EAEF,OAAOE,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAET,KAAK,KAAK;EAClD,IAAI,CAACA,KAAK,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,UAAUU,MAAM,EAAE,EAAEC,QAAQ,EAAE;IACrEL,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;EAEF,OAAOE,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMK,UAAU,GAAG,MAAAA,CAAOH,MAAM,EAAER,KAAK,KAAK;EACxC,IAAI,CAACA,KAAK,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EAEA,MAAMJ,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,UAAUU,MAAM,EAAE,EAAE;IAC7CJ,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;;EAEF;AACJ,CAAC;AAED,eAAe;EACXD,WAAW;EACXQ,UAAU;EACVI;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}