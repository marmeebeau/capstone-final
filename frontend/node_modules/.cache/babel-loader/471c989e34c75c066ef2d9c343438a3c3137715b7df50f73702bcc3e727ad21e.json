{"ast":null,"code":"// src/services/authServices.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:1337/api'; // Replace with your Strapi backend URL\n\n// Register a new coordinator\nexport const signup = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/coordinators/register`, {\n      data: formData\n    });\n    if (response.data.jwt) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response$data$;\n    console.error('Signup error:', error); // Log the entire error object\n    // Ensure to access the error response and get a meaningful message\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Signup failed. Please try again.';\n    throw new Error(errorMessage); // Ensure this throws a string message\n  }\n};\n\n// Login a user (coordinator or admin)\nexport const login = async (identifier, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/api/coordinators/login`, {\n      identifier,\n      password\n    });\n    console.log('Response from API:', response.data);\n    const {\n      user,\n      jwt\n    } = response.data;\n    if (!jwt) {\n      console.error('No token received from the server.');\n      throw new Error('Login failed, no token received.');\n    }\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('token', jwt);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data, _error$response2$data2;\n    const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Error logging in. Please check your credentials';\n    console.error(\"Error during login:\", errorMessage);\n    throw new Error(errorMessage);\n  }\n};\n\n// Logout a user by removing the token from localStorage\nexport const logout = () => {\n  localStorage.removeItem('user');\n};\n\n// Get the current authenticated user from localStorage\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\n// Check if a user is authenticated by checking the presence of a token\nexport const isAuthenticated = () => {\n  const user = getCurrentUser();\n  return user && user.jwt ? true : false;\n};\n\n// Export all authentication services\nconst authServices = {\n  signup,\n  login,\n  logout,\n  getCurrentUser,\n  isAuthenticated\n};\nexport default authServices;","map":{"version":3,"names":["axios","API_URL","signup","formData","response","post","data","jwt","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","_error$response$data$","console","errorMessage","message","Error","login","identifier","password","log","user","_error$response2","_error$response2$data","_error$response2$data2","logout","removeItem","getCurrentUser","parse","getItem","isAuthenticated","authServices"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/services/authServices.js"],"sourcesContent":["// src/services/authServices.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:1337/api'; // Replace with your Strapi backend URL\r\n\r\n// Register a new coordinator\r\nexport const signup = async (formData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/coordinators/register`, { data: formData });\r\n      if (response.data.jwt) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n        console.error('Signup error:', error); // Log the entire error object\r\n        // Ensure to access the error response and get a meaningful message\r\n        const errorMessage = error.response?.data?.error?.message || 'Signup failed. Please try again.';\r\n        throw new Error(errorMessage); // Ensure this throws a string message\r\n      }\r\n};\r\n\r\n// Login a user (coordinator or admin)\r\nexport const login = async (identifier, password) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/api/coordinators/login`, {\r\n            identifier,\r\n            password,\r\n        });\r\n\r\n        console.log('Response from API:', response.data);\r\n        const { user, jwt } = response.data;\r\n\r\n        if (!jwt) {\r\n            console.error('No token received from the server.');\r\n            throw new Error('Login failed, no token received.');\r\n        }\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('token', jwt);\r\n\r\n        return response.data;\r\n\r\n    } catch (error) {\r\n        const errorMessage = error.response?.data?.error?.message || 'Error logging in. Please check your credentials';\r\n        console.error(\"Error during login:\", errorMessage);\r\n        throw new Error(errorMessage);\r\n    }\r\n};\r\n\r\n\r\n\r\n// Logout a user by removing the token from localStorage\r\nexport const logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// Get the current authenticated user from localStorage\r\nexport const getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem('user'));\r\n};\r\n\r\n// Check if a user is authenticated by checking the presence of a token\r\nexport const isAuthenticated = () => {\r\n  const user = getCurrentUser();\r\n  return user && user.jwt ? true : false;\r\n};\r\n\r\n// Export all authentication services\r\nconst authServices = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  isAuthenticated,\r\n};\r\n\r\nexport default authServices;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,wBAAwB,EAAE;MAAEK,IAAI,EAAEH;IAAS,CAAC,CAAC;IACzF,IAAIC,QAAQ,CAACE,IAAI,CAACC,GAAG,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC7D;IACA,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,qBAAA;IACZC,OAAO,CAACJ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;IACvC;IACA,MAAMK,YAAY,GAAG,EAAAJ,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,wBAAAC,qBAAA,GAApBD,oBAAA,CAAsBF,KAAK,cAAAG,qBAAA,uBAA3BA,qBAAA,CAA6BG,OAAO,KAAI,kCAAkC;IAC/F,MAAM,IAAIC,KAAK,CAACF,YAAY,CAAC,CAAC,CAAC;EACjC;AACN,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACA,MAAMlB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,yBAAyB,EAAE;MACnEoB,UAAU;MACVC;IACJ,CAAC,CAAC;IAEFN,OAAO,CAACO,GAAG,CAAC,oBAAoB,EAAEnB,QAAQ,CAACE,IAAI,CAAC;IAChD,MAAM;MAAEkB,IAAI;MAAEjB;IAAI,CAAC,GAAGH,QAAQ,CAACE,IAAI;IAEnC,IAAI,CAACC,GAAG,EAAE;MACNS,OAAO,CAACJ,KAAK,CAAC,oCAAoC,CAAC;MACnD,MAAM,IAAIO,KAAK,CAAC,kCAAkC,CAAC;IACvD;IAEAX,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACa,IAAI,CAAC,CAAC;IAClDhB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAAC;IAElC,OAAOH,QAAQ,CAACE,IAAI;EAExB,CAAC,CAAC,OAAOM,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IACZ,MAAMV,YAAY,GAAG,EAAAQ,gBAAA,GAAAb,KAAK,CAACR,QAAQ,cAAAqB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnB,IAAI,cAAAoB,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBd,KAAK,cAAAe,sBAAA,uBAA3BA,sBAAA,CAA6BT,OAAO,KAAI,iDAAiD;IAC9GF,OAAO,CAACJ,KAAK,CAAC,qBAAqB,EAAEK,YAAY,CAAC;IAClD,MAAM,IAAIE,KAAK,CAACF,YAAY,CAAC;EACjC;AACJ,CAAC;;AAID;AACA,OAAO,MAAMW,MAAM,GAAGA,CAAA,KAAM;EAC1BpB,YAAY,CAACqB,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOpB,IAAI,CAACqB,KAAK,CAACvB,YAAY,CAACwB,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMT,IAAI,GAAGM,cAAc,CAAC,CAAC;EAC7B,OAAON,IAAI,IAAIA,IAAI,CAACjB,GAAG,GAAG,IAAI,GAAG,KAAK;AACxC,CAAC;;AAED;AACA,MAAM2B,YAAY,GAAG;EACnBhC,MAAM;EACNkB,KAAK;EACLQ,MAAM;EACNE,cAAc;EACdG;AACF,CAAC;AAED,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}