{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\n\n// Set the base URL for the API\nconst API_URL = 'http://localhost:1337/api'; // Replace with your actual API URL\n\n// Create a custom hook to get the token\nconst useToken = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  if (!token) {\n    throw new Error('User not authenticated');\n  }\n  return token;\n};\n_s(useToken, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\nconst getAllUsers = async () => {\n  _s2();\n  const token = useToken(); // Get token from AuthContext\n\n  const response = await axios.get(`${API_URL}/coordinators`, {\n    headers: {\n      Authorization: `Bearer ${token}` // Use the token here\n    }\n  });\n  return response.data; // Return the user data\n};\n_s2(getAllUsers, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});\nconst updateUser = async (userId, userData) => {\n  _s3();\n  const token = useToken(); // Get token from AuthContext\n\n  const response = await axios.put(`${API_URL}/users/${userId}`, userData, {\n    headers: {\n      Authorization: `Bearer ${token}` // Include token in the headers\n    }\n  });\n  return response.data; // This should return the updated user object\n};\n_s3(updateUser, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});\nconst deleteUser = async userId => {\n  _s4();\n  const token = useToken(); // Get token from AuthContext\n\n  await axios.delete(`${API_URL}/users/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}` // Include token in the headers\n    }\n  });\n\n  // No return value for delete, just need to ensure it's successful\n};\n_s4(deleteUser, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});\nexport default {\n  getAllUsers,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"names":["axios","useAuth","API_URL","useToken","_s","token","Error","getAllUsers","_s2","response","get","headers","Authorization","data","updateUser","userId","userData","_s3","put","deleteUser","_s4","delete"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/userServices.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// Set the base URL for the API\r\nconst API_URL = 'http://localhost:1337/api'; // Replace with your actual API URL\r\n\r\n// Create a custom hook to get the token\r\nconst useToken = () => {\r\n    const { token } = useAuth();\r\n    if (!token) {\r\n        throw new Error('User not authenticated');\r\n    }\r\n    return token;\r\n};\r\n\r\nconst getAllUsers = async () => {\r\n    const token = useToken(); // Get token from AuthContext\r\n\r\n    const response = await axios.get(`${API_URL}/coordinators`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Use the token here\r\n        }\r\n    });\r\n\r\n    return response.data; // Return the user data\r\n};\r\n\r\nconst updateUser = async (userId, userData) => {\r\n    const token = useToken(); // Get token from AuthContext\r\n\r\n    const response = await axios.put(`${API_URL}/users/${userId}`, userData, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Include token in the headers\r\n        }\r\n    });\r\n\r\n    return response.data; // This should return the updated user object\r\n};\r\n\r\nconst deleteUser = async (userId) => {\r\n    const token = useToken(); // Get token from AuthContext\r\n\r\n    await axios.delete(`${API_URL}/users/${userId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}` // Include token in the headers\r\n        }\r\n    });\r\n    \r\n    // No return value for delete, just need to ensure it's successful\r\n};\r\n\r\nexport default {\r\n    getAllUsers,\r\n    updateUser,\r\n    deleteUser\r\n};\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;;AAEhD;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,OAAO,CAAC,CAAC;EAC3B,IAAI,CAACI,KAAK,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;EACA,OAAOD,KAAK;AAChB,CAAC;AAACD,EAAA,CANID,QAAQ;EAAA,QACQF,OAAO;AAAA;AAO7B,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;EAAAC,GAAA;EAC5B,MAAMH,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1B,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,OAAO,eAAe,EAAE;IACxDS,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;EAEF,OAAOI,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAACL,GAAA,CAVID,WAAW;EAAA,QACCJ,QAAQ;AAAA;AAW1B,MAAMW,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;EAAAC,GAAA;EAC3C,MAAMZ,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1B,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACkB,GAAG,CAAC,GAAGhB,OAAO,UAAUa,MAAM,EAAE,EAAEC,QAAQ,EAAE;IACrEL,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;EAEF,OAAOI,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B,CAAC;AAACI,GAAA,CAVIH,UAAU;EAAA,QACEX,QAAQ;AAAA;AAW1B,MAAMgB,UAAU,GAAG,MAAOJ,MAAM,IAAK;EAAAK,GAAA;EACjC,MAAMf,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1B,MAAMH,KAAK,CAACqB,MAAM,CAAC,GAAGnB,OAAO,UAAUa,MAAM,EAAE,EAAE;IAC7CJ,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAC;IACrC;EACJ,CAAC,CAAC;;EAEF;AACJ,CAAC;AAACe,GAAA,CAVID,UAAU;EAAA,QACEhB,QAAQ;AAAA;AAW1B,eAAe;EACXI,WAAW;EACXO,UAAU;EACVK;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}