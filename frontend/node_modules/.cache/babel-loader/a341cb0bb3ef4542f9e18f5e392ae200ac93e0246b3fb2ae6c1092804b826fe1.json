{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUserData = localStorage.getItem('user');\n      if (!storedUserData || storedUserData === \"undefined\") {\n        return null;\n      }\n      return JSON.parse(storedUserData);\n    } catch (error) {\n      console.error('Failed to parse user data from local storage:', error);\n      localStorage.removeItem('user');\n      return null;\n    }\n  });\n  const navigate = useNavigate();\n  const login = async (identifier, password) => {\n    try {\n      const {\n        user,\n        token\n      } = await authServices.login(identifier, password);\n      setUser(user);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      navigate('/dashboard'); // Redirect to dashboard after successful login\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login'); // Redirect to login after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GpWrOAha/SqK0ogb9B7PAK4l974=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","authServices","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUserData","localStorage","getItem","JSON","parse","error","console","removeItem","navigate","login","identifier","password","token","setItem","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authServices from '../services/authServices';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      const storedUserData = localStorage.getItem('user');\r\n      if (!storedUserData || storedUserData === \"undefined\") {\r\n        return null;\r\n      }\r\n      return JSON.parse(storedUserData);\r\n    } catch (error) {\r\n      console.error('Failed to parse user data from local storage:', error);\r\n      localStorage.removeItem('user');\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      const { user, token } = await authServices.login(identifier, password);\r\n      setUser(user);\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      navigate('/dashboard'); // Redirect to dashboard after successful login\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login'); // Redirect to login after logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,IAAI;MACF,MAAMW,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACnD,IAAI,CAACF,cAAc,IAAIA,cAAc,KAAK,WAAW,EAAE;QACrD,OAAO,IAAI;MACb;MACA,OAAOG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC;IACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrEJ,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MAC/B,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,KAAK,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC5C,IAAI;MACF,MAAM;QAAEb,IAAI;QAAEc;MAAM,CAAC,GAAG,MAAMrB,YAAY,CAACkB,KAAK,CAACC,UAAU,EAAEC,QAAQ,CAAC;MACtEZ,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;MACpCX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAAChB,IAAI,CAAC,CAAC;MAClDU,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/BC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEW,KAAK;MAAEM;IAAO,CAAE;IAAAnB,QAAA,EAClDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CA1CWF,YAAY;EAAA,QAeNL,WAAW;AAAA;AAAAgC,EAAA,GAfjB3B,YAAY;AA4CzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC8B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}