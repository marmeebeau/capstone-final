{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    identifier: '',\n    // Unified identifier for username or email\n    coor_password: '' // Ensure this matches your backend\n  });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Logging in with credentials:\", credentials); // Debugging line\n    try {\n      const response = await authServices.login(credentials.identifier, credentials.coor_password);\n      // Store the complete user data including token\n      localStorage.setItem('user', JSON.stringify(response)); // Store entire response\n      navigate('/dashboard'); // Redirect to dashboard after successful login\n      window.location.reload(); // Optional: reload page to refresh user data\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n      console.error('Login error:', error); // Log the complete error object\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Login failed. Please try again.';\n      setError(errorMessage); // Display the error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"identifier\" // This remains as identifier\n        ,\n        value: credentials.identifier,\n        onChange: handleChange,\n        placeholder: \"Username or Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"coor_password\" // Ensure this matches the backend expectation\n        ,\n        value: credentials.coor_password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"KQgillAtav4vRSAJYkSBoXwNbq8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","authServices","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","identifier","coor_password","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","login","localStorage","setItem","JSON","stringify","window","location","reload","_error$response","_error$response$data","_error$response$data$","errorMessage","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authServices from '../services/authServices';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    identifier: '', // Unified identifier for username or email\r\n    coor_password: '', // Ensure this matches your backend\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Logging in with credentials:\", credentials); // Debugging line\r\n    try {\r\n        const response = await authServices.login(credentials.identifier, credentials.coor_password);\r\n        // Store the complete user data including token\r\n        localStorage.setItem('user', JSON.stringify(response)); // Store entire response\r\n        navigate('/dashboard'); // Redirect to dashboard after successful login\r\n        window.location.reload(); // Optional: reload page to refresh user data\r\n    } catch (error) {\r\n        console.error('Login error:', error); // Log the complete error object\r\n        const errorMessage = error.response?.data?.error?.message || 'Login failed. Please try again.';\r\n        setError(errorMessage); // Display the error message\r\n    }    \r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"identifier\" // This remains as identifier\r\n          value={credentials.identifier}\r\n          onChange={handleChange}\r\n          placeholder=\"Username or Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"coor_password\" // Ensure this matches the backend expectation\r\n          value={credentials.coor_password}\r\n          onChange={handleChange}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}