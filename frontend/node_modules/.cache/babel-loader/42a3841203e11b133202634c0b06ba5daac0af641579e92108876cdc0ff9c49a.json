{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\components\\\\PrivateRoutes.jsx\",\n  _s = $RefreshSig$();\n// src/components/PrivateRoutes.jsx\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  requiredRole\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // Check if user is authenticated and has the required role\n  const isAuthorized = user && (!requiredRole || user.coor_role === requiredRole);\n\n  // Render Outlet if authorized, otherwise redirect to login\n  return isAuthorized ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 38\n  }, this);\n};\n_s(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","PrivateRoute","requiredRole","_s","user","isAuthorized","coor_role","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/components/PrivateRoutes.jsx"],"sourcesContent":["// src/components/PrivateRoutes.jsx\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ requiredRole }) => {\r\n  const { user } = useAuth();\r\n\r\n  // Check if user is authenticated and has the required role\r\n  const isAuthorized = user && (!requiredRole || user.coor_role === requiredRole);\r\n\r\n  // Render Outlet if authorized, otherwise redirect to login\r\n  return isAuthorized ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAE1B;EACA,MAAMO,YAAY,GAAGD,IAAI,KAAK,CAACF,YAAY,IAAIE,IAAI,CAACE,SAAS,KAAKJ,YAAY,CAAC;;EAE/E;EACA,OAAOG,YAAY,gBAAGL,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGV,OAAA,CAACJ,QAAQ;IAACe,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAACP,EAAA,CARIF,YAAY;EAAA,QACCH,OAAO;AAAA;AAAAc,EAAA,GADpBX,YAAY;AAUlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}