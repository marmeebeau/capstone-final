{"ast":null,"code":"// src/context/AuthContext.jsx\nimport React,{createContext,useContext,useState}from'react';import authServices from'../services/authServices';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;// Initialize user state\nconst[user,setUser]=useState(()=>{// Get user from local storage on initial load\nconst storedUserData=localStorage.getItem('user');// Renamed to avoid confusion\nreturn storedUserData?JSON.parse(storedUserData):null;// Parse user data if exists\n});// Login function\nconst login=async(identifier,password)=>{try{const{user,token}=await authServices.login(identifier,password);setUser(user);// Set user data in state\nlocalStorage.setItem('token',token);// Store token in local storage\nlocalStorage.setItem('user',JSON.stringify(user));// Store user in local storage\n}catch(error){console.error(\"Login failed:\",error);throw error;// Rethrow the error for handling in the component\n}};// Logout function\nconst logout=()=>{setUser(null);localStorage.removeItem('token');localStorage.removeItem('user');// Remove user from local storage\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","authServices","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","storedUserData","localStorage","getItem","JSON","parse","login","identifier","password","token","setItem","stringify","error","console","logout","removeItem","Provider","value","useAuth"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport authServices from '../services/authServices';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    // Initialize user state\r\n    const [user, setUser] = useState(() => {\r\n        // Get user from local storage on initial load\r\n        const storedUserData = localStorage.getItem('user'); // Renamed to avoid confusion\r\n        return storedUserData ? JSON.parse(storedUserData) : null; // Parse user data if exists\r\n    });\r\n\r\n    // Login function\r\n    const login = async (identifier, password) => {\r\n        try {\r\n            const { user, token } = await authServices.login(identifier, password);\r\n            setUser(user); // Set user data in state\r\n            localStorage.setItem('token', token); // Store token in local storage\r\n            localStorage.setItem('user', JSON.stringify(user)); // Store user in local storage\r\n        } catch (error) {\r\n            console.error(\"Login failed:\", error);\r\n            throw error; // Rethrow the error for handling in the component\r\n        }\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user'); // Remove user from local storage\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAClE,MAAO,CAAAC,YAAY,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC;AACA,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACnC;AACA,KAAM,CAAAU,cAAc,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAE;AACrD,MAAO,CAAAF,cAAc,CAAGG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAG,IAAI,CAAE;AAC/D,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,KAAK,CAAG,KAAAA,CAAOC,UAAU,CAAEC,QAAQ,GAAK,CAC1C,GAAI,CACA,KAAM,CAAET,IAAI,CAAEU,KAAM,CAAC,CAAG,KAAM,CAAAjB,YAAY,CAACc,KAAK,CAACC,UAAU,CAAEC,QAAQ,CAAC,CACtER,OAAO,CAACD,IAAI,CAAC,CAAE;AACfG,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAED,KAAK,CAAC,CAAE;AACtCP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACO,SAAS,CAACZ,IAAI,CAAC,CAAC,CAAE;AACxD,CAAE,MAAOa,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,CAAAA,KAAK,CAAE;AACjB,CACJ,CAAC,CAED;AACA,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACjBd,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC,CAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC,CAAE;AACrC,CAAC,CAED,mBACIrB,IAAA,CAACC,WAAW,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAElB,IAAI,CAAEO,KAAK,CAAEQ,MAAO,CAAE,CAAAhB,QAAA,CAChDA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAoB,OAAO,CAAGA,CAAA,GAAM5B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}