{"ast":null,"code":"// src/services/authServices.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:1337/api'; // Adjust if Strapi is hosted elsewhere\n\n// Set authorization token in axios headers\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Utility function for error handling\nconst handleError = error => {\n  var _error$response, _error$response$data, _error$response$data$;\n  console.error('API Error:', error);\n  return ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'An error occurred. Please try again.';\n};\n\n// Register a new coordinator\nexport const signup = async formData => {\n  try {\n    // Make sure to structure the data correctly as Strapi expects\n    const response = await axios.post(`${API_URL}/coordinators/signup`, {\n      data: formData // Wrap formData in an object with a data key\n    });\n    if (response.data.jwt) {\n      localStorage.setItem('user', JSON.stringify(response.data)); // Store user data with JWT\n      setAuthToken(response.data.jwt); // Set token for future requests\n    }\n    return response.data; // Return the response data\n  } catch (error) {\n    var _error$response2, _error$response2$data, _error$response2$data2;\n    console.error('Signup error:', error); // Log the error for debugging\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Signup failed. Please try again.');\n  }\n};\n\n// Login a user (coordinator or admin)\nexport const login = async (identifier, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/coordinators/login`, {\n      data: {\n        identifier,\n        password\n      }\n    });\n    const {\n      coordinator,\n      token\n    } = response.data;\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify({\n      coordinator\n    }));\n    setAuthToken(token); // Set token for future requests\n    return {\n      coordinator,\n      token\n    };\n  } catch (error) {\n    throw new Error(handleError(error));\n  }\n};\n\n// Logout a user\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  setAuthToken(null); // Clear token from headers\n};\n\n// Get current authenticated user from localStorage\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// Check if a user is authenticated by checking the presence of a token\nexport const isAuthenticated = () => {\n  const user = getCurrentUser();\n  return user && user.jwt ? true : false;\n};\n\n// Get the user profile by ID\nexport const getProfile = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/coordinators/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${getCurrentUser().jwt}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(handleError(error));\n  }\n};\n\n// Update the user profile\nexport const updateProfile = async (userId, profileData) => {\n  try {\n    setAuthToken(getCurrentUser().jwt);\n    const response = await axios.put(`${API_URL}/coordinators/${userId}`, {\n      data: profileData\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(handleError(error));\n  }\n};\n\n// Export all services\nconst authServices = {\n  signup,\n  login,\n  logout,\n  getCurrentUser,\n  isAuthenticated,\n  getProfile,\n  updateProfile,\n  setAuthToken\n};\nexport default authServices;","map":{"version":3,"names":["axios","API_URL","setAuthToken","token","defaults","headers","common","handleError","error","_error$response","_error$response$data","_error$response$data$","console","response","data","message","signup","formData","post","jwt","localStorage","setItem","JSON","stringify","_error$response2","_error$response2$data","_error$response2$data2","Error","login","identifier","password","coordinator","logout","removeItem","getCurrentUser","user","getItem","parse","isAuthenticated","getProfile","userId","get","Authorization","updateProfile","profileData","put","authServices"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/authServices.js"],"sourcesContent":["// src/services/authServices.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:1337/api'; // Adjust if Strapi is hosted elsewhere\r\n\r\n// Set authorization token in axios headers\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// Utility function for error handling\r\nconst handleError = (error) => {\r\n  console.error('API Error:', error);\r\n  return error.response?.data?.error?.message || 'An error occurred. Please try again.';\r\n};\r\n\r\n// Register a new coordinator\r\nexport const signup = async (formData) => {\r\n  try {\r\n    // Make sure to structure the data correctly as Strapi expects\r\n    const response = await axios.post(`${API_URL}/coordinators/signup`, {\r\n      data: formData, // Wrap formData in an object with a data key\r\n    });\r\n    \r\n    if (response.data.jwt) {\r\n      localStorage.setItem('user', JSON.stringify(response.data)); // Store user data with JWT\r\n      setAuthToken(response.data.jwt); // Set token for future requests\r\n    }\r\n    \r\n    return response.data; // Return the response data\r\n  } catch (error) {\r\n    console.error('Signup error:', error); // Log the error for debugging\r\n    throw new Error(error.response?.data?.error?.message || 'Signup failed. Please try again.');\r\n  }\r\n};\r\n\r\n// Login a user (coordinator or admin)\r\nexport const login = async (identifier, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/coordinators/login`, { data: { identifier, password } });\r\n    const { coordinator, token } = response.data;\r\n\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify({ coordinator }));\r\n\r\n    setAuthToken(token); // Set token for future requests\r\n    return { coordinator, token };\r\n  } catch (error) {\r\n    throw new Error(handleError(error));\r\n  }\r\n};\r\n\r\n// Logout a user\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  setAuthToken(null); // Clear token from headers\r\n};\r\n\r\n// Get current authenticated user from localStorage\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// Check if a user is authenticated by checking the presence of a token\r\nexport const isAuthenticated = () => {\r\n  const user = getCurrentUser();\r\n  return user && user.jwt ? true : false;\r\n};\r\n\r\n// Get the user profile by ID\r\nexport const getProfile = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/coordinators/${userId}`, {\r\n      headers: { Authorization: `Bearer ${getCurrentUser().jwt}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleError(error));\r\n  }\r\n};\r\n\r\n// Update the user profile\r\nexport const updateProfile = async (userId, profileData) => {\r\n  try {\r\n    setAuthToken(getCurrentUser().jwt);\r\n    const response = await axios.put(`${API_URL}/coordinators/${userId}`, { data: profileData });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleError(error));\r\n  }\r\n};\r\n\r\n// Export all services\r\nconst authServices = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  isAuthenticated,\r\n  getProfile,\r\n  updateProfile,\r\n  setAuthToken,\r\n};\r\n\r\nexport default authServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}