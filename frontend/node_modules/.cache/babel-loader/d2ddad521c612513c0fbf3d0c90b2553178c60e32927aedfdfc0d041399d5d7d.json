{"ast":null,"code":"// src/services/UserServices.js\nimport axios from'axios';import authServices from'./authServices';// For retrieving the token\nconst API_URL='http://localhost:1337/api/coordinators';// Base URL for coordinators\n// Fetch all users (coordinators/admins)\nexport const getAllUsers=async()=>{const user=authServices.getCurrentUser();// Retrieve current user\nif(!user||!user.jwt){throw new Error('User not authenticated');// Ensure user is authenticated\n}authServices.setAuthToken(user.jwt);// Set token for requests\ntry{const response=await axios.get(API_URL);// Fetch all users\nreturn response.data;// Return user data\n}catch(error){console.error('Error fetching users:',error);// Log error\nthrow new Error('Error fetching users');// Throw meaningful error\n}};// Fetch a single user by ID\nconst getUserById=async userId=>{try{const user=authServices.getCurrentUser();// Get user from localStorage\nif(!user||!user.jwt){throw new Error('User not authenticated');// Check if token exists\n}const response=await axios.get(`${API_URL}/${userId}`,{headers:{Authorization:`Bearer ${user.jwt}`// Use the token from user object\n}});return response.data;// Return the response data directly\n}catch(error){var _error$response,_error$response2,_error$response2$data;console.error('Error fetching user:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to fetch user');}};// Create a new user (admin/coordinator)\nconst createUser=async userData=>{try{const user=authServices.getCurrentUser();// Get user from localStorage\nif(!user||!user.jwt){throw new Error('User not authenticated');// Check if token exists\n}const response=await axios.post(API_URL,{data:userData},{headers:{Authorization:`Bearer ${user.jwt}`// Use the token from user object\n}});return response.data;// Return the response data directly\n}catch(error){var _error$response3,_error$response4,_error$response4$data;console.error('Error creating user:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to create user');}};// Update a user by ID\nconst updateUser=async(userId,userData)=>{try{const user=authServices.getCurrentUser();// Get user from localStorage\nif(!user||!user.jwt){throw new Error('User not authenticated');// Check if token exists\n}const response=await axios.put(`${API_URL}/${userId}`,{data:userData},{headers:{Authorization:`Bearer ${user.jwt}`// Use the token from user object\n}});return response.data;// Return the response data directly\n}catch(error){var _error$response5,_error$response6,_error$response6$data;console.error('Error updating user:',((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||error.message);throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to update user');}};// Delete a user by ID\nconst deleteUser=async userId=>{try{const user=authServices.getCurrentUser();// Get user from localStorage\nif(!user||!user.jwt){throw new Error('User not authenticated');// Check if token exists\n}const response=await axios.delete(`${API_URL}/${userId}`,{headers:{Authorization:`Bearer ${user.jwt}`// Use the token from user object\n}});return response.data;// Return the response data directly\n}catch(error){var _error$response7,_error$response8,_error$response8$data;console.error('Error deleting user:',((_error$response7=error.response)===null||_error$response7===void 0?void 0:_error$response7.data)||error.message);throw new Error(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to delete user');}};// Export all user services\nconst userServices={getAllUsers,getUserById,createUser,updateUser,deleteUser};export default userServices;","map":{"version":3,"names":["axios","authServices","API_URL","getAllUsers","user","getCurrentUser","jwt","Error","setAuthToken","response","get","data","error","console","getUserById","userId","headers","Authorization","_error$response","_error$response2","_error$response2$data","message","createUser","userData","post","_error$response3","_error$response4","_error$response4$data","updateUser","put","_error$response5","_error$response6","_error$response6$data","deleteUser","delete","_error$response7","_error$response8","_error$response8$data","userServices"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/userServices.js"],"sourcesContent":["// src/services/UserServices.js\r\nimport axios from 'axios';\r\nimport authServices from './authServices';  // For retrieving the token\r\n\r\nconst API_URL = 'http://localhost:1337/api/coordinators';  // Base URL for coordinators\r\n\r\n// Fetch all users (coordinators/admins)\r\nexport const getAllUsers = async () => {\r\n    const user = authServices.getCurrentUser(); // Retrieve current user\r\n    if (!user || !user.jwt) {\r\n        throw new Error('User not authenticated'); // Ensure user is authenticated\r\n    }\r\n\r\n    authServices.setAuthToken(user.jwt); // Set token for requests\r\n\r\n    try {\r\n        const response = await axios.get(API_URL); // Fetch all users\r\n        return response.data; // Return user data\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error); // Log error\r\n        throw new Error('Error fetching users'); // Throw meaningful error\r\n    }\r\n};\r\n\r\n// Fetch a single user by ID\r\nconst getUserById = async (userId) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.get(`${API_URL}/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error fetching user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to fetch user');\r\n    }\r\n};\r\n\r\n// Create a new user (admin/coordinator)\r\nconst createUser = async (userData) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.post(API_URL, { data: userData }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error creating user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to create user');\r\n    }\r\n};\r\n\r\n// Update a user by ID\r\nconst updateUser = async (userId, userData) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.put(`${API_URL}/${userId}`, { data: userData }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error updating user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to update user');\r\n    }\r\n};\r\n\r\n// Delete a user by ID\r\nconst deleteUser = async (userId) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.delete(`${API_URL}/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error deleting user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to delete user');\r\n    }\r\n};\r\n\r\n// Export all user services\r\nconst userServices = {\r\n    getAllUsers,\r\n    getUserById,\r\n    createUser,\r\n    updateUser,\r\n    deleteUser,\r\n};\r\n\r\nexport default userServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}