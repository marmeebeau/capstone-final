{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\components\\\\ManageUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if the user is an admin\n  const isAdmin = () => {\n    const currentUser = authServices.getCurrentUser();\n    return currentUser && currentUser.coor_role === 'Admin';\n  };\n  useEffect(() => {\n    if (!isAdmin()) {\n      // Redirect if the user is not an admin\n      navigate('/');\n    } else {\n      // Fetch the list of users from the backend\n      fetchUsers();\n    }\n    // Add navigate as a dependency to prevent the ESLint warning\n  }, [navigate]);\n\n  // Fetch users from the backend\n  const fetchUsers = async () => {\n    try {\n      const response = await authServices.getUsers(); // Assuming this is an endpoint to get all users\n      setUsers(response);\n    } catch (err) {\n      setError('Failed to fetch users.');\n      console.error(err);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.coor_username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.coor_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.coor_role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageUsers, \"wnYlELZh4EX8EmZGmKTrPqC5qbc=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","authServices","jsxDEV","_jsxDEV","ManageUsers","_s","users","setUsers","error","setError","navigate","isAdmin","currentUser","getCurrentUser","coor_role","fetchUsers","response","getUsers","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","coor_username","coor_email","_c","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/components/ManageUsers.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authServices from '../services/authServices';\r\n\r\nconst ManageUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the user is an admin\r\n  const isAdmin = () => {\r\n    const currentUser = authServices.getCurrentUser();\r\n    return currentUser && currentUser.coor_role === 'Admin';\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin()) {\r\n      // Redirect if the user is not an admin\r\n      navigate('/');\r\n    } else {\r\n      // Fetch the list of users from the backend\r\n      fetchUsers();\r\n    }\r\n    // Add navigate as a dependency to prevent the ESLint warning\r\n  }, [navigate]);\r\n\r\n  // Fetch users from the backend\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await authServices.getUsers(); // Assuming this is an endpoint to get all users\r\n      setUsers(response);\r\n    } catch (err) {\r\n      setError('Failed to fetch users.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manage Users</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Username</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.coor_username}</td>\r\n              <td>{user.coor_email}</td>\r\n              <td>{user.coor_role}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}