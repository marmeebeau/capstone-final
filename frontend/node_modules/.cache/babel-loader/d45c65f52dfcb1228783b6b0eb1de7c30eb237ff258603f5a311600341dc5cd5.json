{"ast":null,"code":"// src/services/UserServices.js\nimport axios from 'axios';\nimport authServices from './services/authServices'; // For retrieving the token\n\nconst API_URL = 'http://localhost:1337/api/coordinators'; // Base URL for coordinators\n\n// Fetch all users (coordinators/admins)\nexport const getAllUsers = async () => {\n  const user = authServices.getCurrentUser(); // Retrieve current user\n  if (!user || !user.jwt) {\n    throw new Error('User not authenticated'); // Ensure user is authenticated\n  }\n  authServices.setAuthToken(user.jwt); // Set token for requests\n\n  try {\n    const response = await axios.get(API_URL); // Fetch all users\n    return response.data; // Return user data\n  } catch (error) {\n    console.error('Error fetching users:', error); // Log error\n    throw new Error('Error fetching users'); // Throw meaningful error\n  }\n};\n\n// Fetch a single user by ID\nconst getUserById = async userId => {\n  try {\n    const user = authServices.getCurrentUser(); // Get user from localStorage\n    if (!user || !user.jwt) {\n      throw new Error('User not authenticated'); // Check if token exists\n    }\n    const response = await axios.get(`${API_URL}/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${user.jwt}` // Use the token from user object\n      }\n    });\n    return response.data; // Return the response data directly\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Error fetching user:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch user');\n  }\n};\n\n// Create a new user (admin/coordinator)\nconst createUser = async userData => {\n  try {\n    const user = authServices.getCurrentUser(); // Get user from localStorage\n    if (!user || !user.jwt) {\n      throw new Error('User not authenticated'); // Check if token exists\n    }\n    const response = await axios.post(API_URL, {\n      data: userData\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.jwt}` // Use the token from user object\n      }\n    });\n    return response.data; // Return the response data directly\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response4$data;\n    console.error('Error creating user:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to create user');\n  }\n};\n\n// Update a user by ID\nconst updateUser = async (userId, userData) => {\n  try {\n    const user = authServices.getCurrentUser(); // Get user from localStorage\n    if (!user || !user.jwt) {\n      throw new Error('User not authenticated'); // Check if token exists\n    }\n    const response = await axios.put(`${API_URL}/${userId}`, {\n      data: userData\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.jwt}` // Use the token from user object\n      }\n    });\n    return response.data; // Return the response data directly\n  } catch (error) {\n    var _error$response5, _error$response6, _error$response6$data;\n    console.error('Error updating user:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to update user');\n  }\n};\n\n// Delete a user by ID\nconst deleteUser = async userId => {\n  try {\n    const user = authServices.getCurrentUser(); // Get user from localStorage\n    if (!user || !user.jwt) {\n      throw new Error('User not authenticated'); // Check if token exists\n    }\n    const response = await axios.delete(`${API_URL}/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${user.jwt}` // Use the token from user object\n      }\n    });\n    return response.data; // Return the response data directly\n  } catch (error) {\n    var _error$response7, _error$response8, _error$response8$data;\n    console.error('Error deleting user:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to delete user');\n  }\n};\n\n// Export all user services\nconst userServices = {\n  getAllUsers,\n  getUserById,\n  createUser,\n  updateUser,\n  deleteUser\n};\nexport default userServices;","map":{"version":3,"names":["axios","authServices","API_URL","getAllUsers","user","getCurrentUser","jwt","Error","setAuthToken","response","get","data","error","console","getUserById","userId","headers","Authorization","_error$response","_error$response2","_error$response2$data","message","createUser","userData","post","_error$response3","_error$response4","_error$response4$data","updateUser","put","_error$response5","_error$response6","_error$response6$data","deleteUser","delete","_error$response7","_error$response8","_error$response8$data","userServices"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/services/userServices.js"],"sourcesContent":["// src/services/UserServices.js\r\nimport axios from 'axios';\r\nimport authServices from './services/authServices';  // For retrieving the token\r\n\r\nconst API_URL = 'http://localhost:1337/api/coordinators';  // Base URL for coordinators\r\n\r\n// Fetch all users (coordinators/admins)\r\nexport const getAllUsers = async () => {\r\n    const user = authServices.getCurrentUser(); // Retrieve current user\r\n    if (!user || !user.jwt) {\r\n        throw new Error('User not authenticated'); // Ensure user is authenticated\r\n    }\r\n\r\n    authServices.setAuthToken(user.jwt); // Set token for requests\r\n\r\n    try {\r\n        const response = await axios.get(API_URL); // Fetch all users\r\n        return response.data; // Return user data\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error); // Log error\r\n        throw new Error('Error fetching users'); // Throw meaningful error\r\n    }\r\n};\r\n\r\n// Fetch a single user by ID\r\nconst getUserById = async (userId) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.get(`${API_URL}/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error fetching user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to fetch user');\r\n    }\r\n};\r\n\r\n// Create a new user (admin/coordinator)\r\nconst createUser = async (userData) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.post(API_URL, { data: userData }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error creating user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to create user');\r\n    }\r\n};\r\n\r\n// Update a user by ID\r\nconst updateUser = async (userId, userData) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.put(`${API_URL}/${userId}`, { data: userData }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error updating user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to update user');\r\n    }\r\n};\r\n\r\n// Delete a user by ID\r\nconst deleteUser = async (userId) => {\r\n    try {\r\n        const user = authServices.getCurrentUser(); // Get user from localStorage\r\n        if (!user || !user.jwt) {\r\n            throw new Error('User not authenticated'); // Check if token exists\r\n        }\r\n\r\n        const response = await axios.delete(`${API_URL}/${userId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${user.jwt}`, // Use the token from user object\r\n            },\r\n        });\r\n        return response.data; // Return the response data directly\r\n    } catch (error) {\r\n        console.error('Error deleting user:', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || 'Failed to delete user');\r\n    }\r\n};\r\n\r\n// Export all user services\r\nconst userServices = {\r\n    getAllUsers,\r\n    getUserById,\r\n    createUser,\r\n    updateUser,\r\n    deleteUser,\r\n};\r\n\r\nexport default userServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}