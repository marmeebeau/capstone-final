{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\capstone-final\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport authServices from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUserData = localStorage.getItem('user');\n      console.log(\"Stored User Data in localStorage:\", storedUserData); // Log for debugging\n      return storedUserData ? JSON.parse(storedUserData) : null;\n    } catch (error) {\n      console.error(\"Failed to parse user data from local storage:\", error);\n      return null;\n    }\n  });\n\n  // Logout function to clear user data\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    console.log(\"User logged out\"); // Log for debugging\n  };\n\n  // Login function to authenticate and set user/token\n  const login = async (identifier, password) => {\n    try {\n      const {\n        user,\n        token\n      } = await authServices.login(identifier, password);\n      console.log(\"User Data After Login:\", user); // Log user after login for debugging\n      setUser(user);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    }\n  };\n\n  // Function to get the current user\n  const getCurrentUser = () => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  };\n\n  // Function to check if the user is an admin\n  const isAdmin = () => {\n    const currentUser = getCurrentUser();\n    console.log(\"Current User in isAdmin Check:\", currentUser); // Debugging log\n    return currentUser && currentUser.coor_role === 'Admin';\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAdmin,\n      getCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook to use the AuthContext\n_s(AuthProvider, \"VvHBZFdbci6JRbh3pua7f3rpbz8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","authServices","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUserData","localStorage","getItem","console","log","JSON","parse","error","logout","removeItem","login","identifier","password","token","setItem","stringify","getCurrentUser","storedUser","isAdmin","currentUser","coor_role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/capstone-final/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport authServices from '../services/authServices';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        try {\r\n            const storedUserData = localStorage.getItem('user');\r\n            console.log(\"Stored User Data in localStorage:\", storedUserData); // Log for debugging\r\n            return storedUserData ? JSON.parse(storedUserData) : null;\r\n        } catch (error) {\r\n            console.error(\"Failed to parse user data from local storage:\", error);\r\n            return null;\r\n        }\r\n    });\r\n\r\n    // Logout function to clear user data\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        console.log(\"User logged out\"); // Log for debugging\r\n    };\r\n\r\n    // Login function to authenticate and set user/token\r\n    const login = async (identifier, password) => {\r\n        try {\r\n            const { user, token } = await authServices.login(identifier, password);\r\n            console.log(\"User Data After Login:\", user); // Log user after login for debugging\r\n            setUser(user);\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        } catch (error) {\r\n            console.error(\"Login failed:\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Function to get the current user\r\n    const getCurrentUser = () => {\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    };\r\n\r\n    // Function to check if the user is an admin\r\n    const isAdmin = () => {\r\n        const currentUser = getCurrentUser();\r\n        console.log(\"Current User in isAdmin Check:\", currentUser); // Debugging log\r\n        return currentUser && currentUser.coor_role === 'Admin';\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, isAdmin, getCurrentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook to use the AuthContext\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}