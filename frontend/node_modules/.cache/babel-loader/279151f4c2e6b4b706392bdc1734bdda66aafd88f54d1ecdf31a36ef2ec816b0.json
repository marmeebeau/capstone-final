{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marmeeluv\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\components\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { updateProfile } from './authServices'; // Adjust the import based on your structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    coor_fname: '',\n    coor_lname: '',\n    coor_username: '',\n    coor_email: '',\n    coor_contact: '',\n    coor_address: '',\n    coor_role: ''\n  });\n  useEffect(() => {\n    // Assume you fetch user data here and set it to formData\n    const fetchUserData = async () => {\n      const user = await fetchUserDataFromAPI(); // Replace with your actual API call\n      setFormData(user);\n    };\n    fetchUserData();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateProfile(formData); // Pass the formData to updateProfile\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"coor_fname\",\n      value: formData.coor_fname,\n      onChange: handleChange,\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"tRYoTI5uQ/OTvoELX2WXAPlzf9s=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","updateProfile","jsxDEV","_jsxDEV","Profile","_s","formData","setFormData","coor_fname","coor_lname","coor_username","coor_email","coor_contact","coor_address","coor_role","fetchUserData","user","fetchUserDataFromAPI","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","error","console","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { updateProfile } from './authServices'; // Adjust the import based on your structure\r\n\r\nconst Profile = () => {\r\n    const [formData, setFormData] = useState({\r\n        coor_fname: '',\r\n        coor_lname: '',\r\n        coor_username: '',\r\n        coor_email: '',\r\n        coor_contact: '',\r\n        coor_address: '',\r\n        coor_role: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Assume you fetch user data here and set it to formData\r\n        const fetchUserData = async () => {\r\n            const user = await fetchUserDataFromAPI(); // Replace with your actual API call\r\n            setFormData(user);\r\n        };\r\n        \r\n        fetchUserData();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await updateProfile(formData); // Pass the formData to updateProfile\r\n        } catch (error) {\r\n            console.error('Failed to update profile:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"coor_fname\"\r\n                value={formData.coor_fname}\r\n                onChange={handleChange}\r\n                placeholder=\"First Name\"\r\n            />\r\n            {/* Repeat for other fields */}\r\n            <button type=\"submit\">Update Profile</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACf,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,IAAI,GAAG,MAAMC,oBAAoB,CAAC,CAAC,CAAC,CAAC;MAC3CV,WAAW,CAACS,IAAI,CAAC;IACrB,CAAC;IAEDD,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAEgB,IAAI,KAAM;MACnB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMxB,aAAa,CAACK,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAMyB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACzB1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXV,IAAI,EAAC,YAAY;MACjBC,KAAK,EAAEf,QAAQ,CAACE,UAAW;MAC3BuB,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEFjC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEf,CAAC;AAAC/B,EAAA,CAnDID,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}