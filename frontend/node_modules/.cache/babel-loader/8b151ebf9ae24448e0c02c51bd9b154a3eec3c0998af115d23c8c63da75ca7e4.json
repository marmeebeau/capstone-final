{"ast":null,"code":"// src/services/authServices.js\nimport axios from'axios';const API_URL='http://localhost:1337/api';// Replace with your Strapi backend URL\n// Register a new coordinator\nexport const signup=async formData=>{try{const response=await axios.post(`${API_URL}/coordinators/register`,{data:formData});if(response.data.jwt){localStorage.setItem('user',JSON.stringify(response.data));}return response.data;}catch(error){var _error$response,_error$response$data,_error$response$data$;console.error('Signup error:',error);// Log the entire error object\n// Ensure to access the error response and get a meaningful message\nconst errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:(_error$response$data$=_error$response$data.error)===null||_error$response$data$===void 0?void 0:_error$response$data$.message)||'Signup failed. Please try again.';throw new Error(errorMessage);// Ensure this throws a string message\n}};// Login a user (coordinator or admin)\nexport const login=async(identifier,password)=>{try{// Log the identifier and password for debugging\nconsole.log(\"Logging in with:\",{identifier,password});// Send the login request to the Strapi API\nconst response=await axios.post('http://localhost:1337/api/coordinators/login',{identifier,// Use the identifier parameter directly\npassword// Use the password parameter directly\n});// Log the response from the API for debugging\nconsole.log('Response from API:',response.data);const{user,jwt}=response.data;// Check if the JWT is present\nif(!jwt){console.error('No token received from the server.');throw new Error('Login failed, no token received.');}// Store the user and token in localStorage\nlocalStorage.setItem('user',JSON.stringify(user));localStorage.setItem('token',jwt);// Return the response data for further use\nreturn response.data;}catch(error){var _error$response2,_error$response2$data,_error$response2$data2;// Handle and log the error appropriately\nconst errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:(_error$response2$data2=_error$response2$data.error)===null||_error$response2$data2===void 0?void 0:_error$response2$data2.message)||'Error logging in. Please check your credentials';console.error(\"Error during login:\",errorMessage);throw new Error(errorMessage);}};// Logout a user by removing the token from localStorage\nexport const logout=()=>{localStorage.removeItem('user');};// Get the current authenticated user from localStorage\nexport const getCurrentUser=()=>{return JSON.parse(localStorage.getItem('user'));};// Check if a user is authenticated by checking the presence of a token\nexport const isAuthenticated=()=>{const user=getCurrentUser();return user&&user.jwt?true:false;};// Export all authentication services\nconst authServices={signup,login,logout,getCurrentUser,isAuthenticated};export default authServices;","map":{"version":3,"names":["axios","API_URL","signup","formData","response","post","data","jwt","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","_error$response$data$","console","errorMessage","message","Error","login","identifier","password","log","user","_error$response2","_error$response2$data","_error$response2$data2","logout","removeItem","getCurrentUser","parse","getItem","isAuthenticated","authServices"],"sources":["C:/Users/marmeeluv/Desktop/New folder/frontend/src/services/authServices.js"],"sourcesContent":["// src/services/authServices.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:1337/api'; // Replace with your Strapi backend URL\r\n\r\n// Register a new coordinator\r\nexport const signup = async (formData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/coordinators/register`, { data: formData });\r\n      if (response.data.jwt) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n        console.error('Signup error:', error); // Log the entire error object\r\n        // Ensure to access the error response and get a meaningful message\r\n        const errorMessage = error.response?.data?.error?.message || 'Signup failed. Please try again.';\r\n        throw new Error(errorMessage); // Ensure this throws a string message\r\n      }\r\n};\r\n\r\n// Login a user (coordinator or admin)\r\nexport const login = async (identifier, password) => {\r\n    try {\r\n        // Log the identifier and password for debugging\r\n        console.log(\"Logging in with:\", { identifier, password });\r\n\r\n        // Send the login request to the Strapi API\r\n        const response = await axios.post('http://localhost:1337/api/coordinators/login', {\r\n            identifier,  // Use the identifier parameter directly\r\n            password,    // Use the password parameter directly\r\n        });\r\n\r\n        // Log the response from the API for debugging\r\n        console.log('Response from API:', response.data);\r\n        const { user, jwt } = response.data;\r\n\r\n        // Check if the JWT is present\r\n        if (!jwt) {\r\n            console.error('No token received from the server.');\r\n            throw new Error('Login failed, no token received.');\r\n        }\r\n\r\n        // Store the user and token in localStorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('token', jwt);\r\n\r\n        // Return the response data for further use\r\n        return response.data;\r\n\r\n    } catch (error) {\r\n        // Handle and log the error appropriately\r\n        const errorMessage = error.response?.data?.error?.message || 'Error logging in. Please check your credentials';\r\n        console.error(\"Error during login:\", errorMessage);\r\n        throw new Error(errorMessage);\r\n    }\r\n};\r\n\r\n\r\n\r\n// Logout a user by removing the token from localStorage\r\nexport const logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// Get the current authenticated user from localStorage\r\nexport const getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem('user'));\r\n};\r\n\r\n// Check if a user is authenticated by checking the presence of a token\r\nexport const isAuthenticated = () => {\r\n  const user = getCurrentUser();\r\n  return user && user.jwt ? true : false;\r\n};\r\n\r\n// Export all authentication services\r\nconst authServices = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  isAuthenticated,\r\n};\r\n\r\nexport default authServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}